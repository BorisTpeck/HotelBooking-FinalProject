@model ListHotelsViewModel

@{
    this.ViewData["Title"] = "All Hotels";
}

<div class="container-fluid">
    <form class="row mt-3 mb-5" method="get"
          asp-route-currentPage="@Model.CurrentPage"
          asp-route-facilityFilter="@Model.FacilityFilter"
          asp-route-locationFilter="@Model.LocationFilter">

        <div class="col-sm-4">
            <select asp-for=LocationFilter class="selectpicker" multiple title="Filter by location">
                @foreach (var location in Model.Locations)
                {
                    <option value="@location.Id">@location.Name</option>
                }
            </select>
        </div>

        <div class="col-sm-4">
            <select asp-for=FacilityFilter class="col-sm-4 selectpicker" multiple title="Filter by facility">
                @foreach (var facility in Model.Facilities)
                {
                    <option value="@facility.Id">@facility.Type.GetDisplayName()</option>
                }
            </select>
        </div>

        <div class="col-sm-1 d-flex align-items-center justify-content-center">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
    </form>

    @if(!Model.Hotels.Any())
    {
        <div class="alert alert-secondary text-center" role="alert">
            No hotels found.
        </div>
    }
    else
    {
        <div class="row gy-3">
            @foreach (var hotel in Model.Hotels)
            {
                <div class="col-sm-4">
                    <div class="card">
                        <img src="@hotel.ImageUrl" class="card-img-top" style="max-height: 230px">
                        <div class="card-body">
                            <h5 class="card-title">@hotel.Name</h5>
                            <div class="mt-1">
                                <div class="card-text">Location: @hotel.Location</div>
                                <div class="card-text mt-2">
                                    @foreach (var facility in hotel.Facilities)
                                    {
                                        <span class="p-1 bg-success rounded text-white">@facility.GetDisplayName()</span>
                                    }
                                </div>

                                @if (this.User.IsInRole(GlobalConstants.AdminRole))
                                {
                                    <div class="card-text d-flex gap-2 mt-2">
                                        <a asp-action="Delete" asp-route-id="@hotel.Id"
                                           class="btn p-0 text-danger @(hotel.HasActiveReservations ? "disabled" : "")"
                                           data-bs-toggle="tooltip"
                                           data-bs-placement="top"
                                           title="@(hotel.HasActiveReservations ? "Has active reservations" : "Delete")">
                                            <i class="fa-solid fa-trash"></i>
                                        </a>

                                        <a asp-action="Edit" asp-route-id="@hotel.Id"
                                           data-bs-toggle="tooltip"
                                           data-bs-placement="top"
                                           class="text-warning"
                                           title="Edit">
                                            <i class="fa-solid fa-pen-to-square"></i>
                                        </a>
                                    </div>
                                }
                            </div>
                            <div class="w-100 text-center mt-4">
                                <a asp-action="Details" asp-route-id="@hotel.Id" class="btn btn-outline-primary w-50">Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="mt-5 d-flex justify-content-between">
            <a class="btn btn-primary @(Model.HasPreviousPage ? "" : "disabled")"
               href="@Url.Page("", new { currentPage = Model.CurrentPage - 1, facilityFilter = Model.FacilityFilter, locationFilter = Model.LocationFilter })">
                Previous
            </a>

            <a class="btn btn-primary @(Model.HasNextPage == false ? "disabled" : string.Empty)"
               href="@Url.Page("", new {currentPage = Model.CurrentPage + 1, facilityFilter = Model.FacilityFilter, locationFilter = Model.LocationFilter})">
                Next
            </a>
        </div>
    }

</div>